* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  overflow-x: hidden;
}

a {
  text-decoration: none;
}

input:focus {
  outline: none;
}

@font-face {
  font-family: "quicksand";
  src: local("./fonts/quicksand") format("truetype");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "quicksand";
  src: local("./fonts/quicksand") format("truetype");
  font-weight: bold;
  font-style: normal;
}
@font-face {
  font-family: "myanmar text";
  src: local("./fonts/myanmar-text") format("truetype");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "myanmar text";
  src: local("./fonts/") format("truetype");
  font-weight: bold;
  font-style: normal;
}
html {
  font-size: 20px;
}
html h1 {
  font-family: "quicksand";
  font-weight: normal;
  line-height: calc(1rem * 1.2 * 1.2 * 1.2 * 1.1);
  text-transform: uppercase;
}
html h2 {
  font-family: "quicksand";
  font-weight: normal;
  line-height: calc(1rem * 1.2 * 1.2 * 1.1);
}
html h3 {
  font-family: "quicksand";
  font-weight: normal;
}
html p {
  font-family: "myanmar text";
  font-weight: normal;
  font-size: 20px;
  line-height: 1.5;
}
html .btn, html ul li {
  font-family: "myanmar text";
}
html header h1 {
  font-size: calc(1rem * 1.2 * 1.2 * 1.2);
}
html header h2 {
  font-size: calc(1rem * 1.2 * 1.2);
}
html header h3, html header .btn {
  font-size: calc(1rem * 1.2);
}
html main h1 {
  font-size: calc(1rem * 1.2 * 1.2 * 1.2);
}
html main h2 {
  font-size: calc(1rem * 1.2 * 1.2);
}
html main h3 {
  font-size: calc(1rem * 1.2);
}
html footer p {
  font-size: 10px;
}

.text-bold {
  font-weight: bold;
}

@media screen and (max-width: 576px) {
  html {
    font-size: 15px;
  }
  html p {
    font-size: 15px;
  }
  html header h1 {
    font-size: calc(1rem * 1.2 * 1.2 * 1.2);
    text-transform: none;
    line-height: calc(1rem * 1.2 * 1.2 * 1.2 * 1.1);
  }
  html header h2 {
    font-size: calc(1rem * 1.2 * 1.2);
    line-height: calc(1rem * 1.2 * 1.2 * 1.1);
  }
  html header h3 {
    font-size: calc(1rem * 1.2);
  }
  html main h1 {
    font-size: calc(1rem * 1.2 * 1.2 * 1.2);
  }
  html main h2 {
    font-size: calc(1rem * 1.2 * 1.2);
  }
  html main h3 {
    font-size: calc(1rem * 1.2);
  }
  html footer p {
    font-size: 15px;
  }

  span.text-correction {
    position: relative;
    display: block;
    height: 14px;
    top: -2px;
  }

  span.inner-btn {
    position: relative;
    top: -6px;
  }
}
header {
  margin-left: 16px;
  margin-right: 16px;
}

nav {
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  margin-bottom: calc(20px * 1.5 * 1.5);
}
nav .form-task__btn {
  justify-self: flex-start;
}
nav h1 {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
nav .settings__dropdown {
  justify-self: flex-end;
}

@media screen and (max-width: 576px) {
  nav {
    margin-bottom: calc(15px * 1.5 * 1.5);
    height: 64px;
  }
}
@media screen and (max-width: 395px) {
  nav h1 {
    display: block;
    position: relative;
    top: auto;
    left: auto;
    transform: none;
  }
}
main {
  margin-left: 32px;
  margin-right: 32px;
}

@media screen and (max-width: 576px) {
  main {
    margin-left: 16px;
    margin-right: 16px;
  }
}
button {
  border: none;
  background-color: #FFFFFF;
}

.add-task__btn {
  margin-top: calc(20px * 1.5);
}

.fa-trash {
  color: #666666;
  cursor: pointer;
}

@media screen and (max-width: 576px) {
  button {
    cursor: pointer;
  }

  .text__btn {
    height: 42px;
  }

  .block__btn {
    display: block;
    padding: 14px auto;
    width: 100%;
    height: 42px;
    border-radius: 14px;
  }

  .form-task__btn {
    border: solid 1px #227CA5;
    padding: 14px 14px;
    border-radius: 14px;
    color: #227CA5;
  }

  .form-task__btn:hover,
.form-task__btn:focus {
    background: #227CA5;
    color: #EAF5FB;
  }

  .form-task__btn:active {
    position: relative;
    top: 2px;
    left: 2px;
  }

  .add-task__btn {
    color: #EAF5FB;
    background-color: #164F69;
  }

  .add-task__btn:hover {
    color: #EAF5FB;
    background-color: #123F54;
  }

  .add-task__btn:active {
    color: #EAF5FB;
    background-color: #237FA9;
  }

  .icon__btn {
    width: 36px;
    height: 36px;
  }

  .fa-plus {
    font-size: 18px;
    margin-right: 10px;
    position: relative;
  }

  .settings__dropdown {
    position: relative;
    display: inline-block;
    width: 46px;
    height: 46px;
  }

  .settings__dropdown ul,
.settings__dropdown ul ul {
    list-style: none;
  }

  .settings__dropdown ul {
    width: 36px;
    height: 36px;
  }

  .settings__dropdown ul li .show-clear-list__btn {
    position: relative;
    display: inline;
    width: 36px;
    height: 36px;
  }

  .settings__dropdown ul li {
    position: relative;
    width: 36px;
    height: 36px;
    text-align: center;
  }

  .settings__dropdown ul li .show-clear-list__btn i:hover {
    background: #EAF5FB;
    color: #164F69;
  }

  .settings__dropdown ul ul {
    position: absolute;
    top: 37px;
    right: -1px;
    min-height: 41.3px;
    min-width: 115px;
  }

  .settings__dropdown ul li ul li {
    min-height: 41.3px;
    min-width: 115px;
  }

  a.clear-list__btn {
    color: #191919;
    position: absolute;
    top: -8px;
    left: 0;
    transform: translate(0%, 25%);
    padding-top: 11px;
    padding-bottom: 12px;
    padding-left: 14px;
    padding-right: 14px;
    border: 1px solid #CCCCCC;
  }

  a.clear-list__btn:hover {
    background: #EAF5FB;
    color: #164F69;
  }

  .settings__dropdown ul li ul li:hover {
    background: #EAF5FB;
    color: #164F69;
  }

  .settings__dropdown ul li ul {
    display: none;
  }

  .settings__dropdown ul li:hover > ul,
.settings__dropdown ul li:focus > ul,
.settings__dropdown ul li:active > ul {
    display: block;
  }

  .fa-trash {
    font-size: 18px;
    width: 36px;
    padding-top: 10px;
    padding-bottom: 10px;
  }
}
.add-task__wrapper {
  padding-top: calc(20px * 1.5 * 1.5);
}

.add-task__input {
  display: block;
  width: 100%;
  border-radius: 10px;
  border: 1px solid #999999;
  padding: 11px calc(20px / 1.5);
}

.add-task__input:focus {
  border-color: #2C9FD3;
}

@media screen and (max-width: 576px) {
  .add-task__wrapper {
    padding-top: calc(15px * 1.5 * 1.5);
  }

  .add-task__input {
    padding: 11px calc(15px / 1.5);
  }
}
/* BASE */
/* LAYOUTS */
/* COMPONENTS */
/* ANIMATIONS */
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UvX3Jlc2V0LnNjc3MiLCJzdHlsZS5jc3MiLCJiYXNlL190eXBvZ3JhcGh5LnNjc3MiLCJsYXlvdXRzL19uYXZiYXIuc2NzcyIsImJhc2UvX3NwYWNlLnNjc3MiLCJsYXlvdXRzL19tYWluLnNjc3MiLCJjb21wb25lbnRzL19idXR0b25zLnNjc3MiLCJiYXNlL19jb2xvci5zY3NzIiwiY29tcG9uZW50cy9faW5wdXRzLnNjc3MiLCJzdHlsZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksU0FBQTtFQUNBLFVBQUE7RUFDQSxzQkFBQTtBQ0NKOztBREdBO0VBQ0ksa0JBQUE7QUNBSjs7QURHQTtFQUNJLHFCQUFBO0FDQUo7O0FES0E7RUFDSSxhQUFBO0FDRko7O0FDWEE7RUFDSSx3QkFBQTtFQUNBLGtEQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtBRGNKO0FDWEE7RUFDSSx3QkFBQTtFQUNBLGtEQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBRGFKO0FDVEE7RUFDSSwyQkFBQTtFQUNBLHFEQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtBRFdKO0FDUkE7RUFDSSwyQkFBQTtFQUNBLHlDQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBRFVKO0FDK0JBO0VBQ0ksZUEvQnFCO0FERXpCO0FDOEJJO0VBQ0ksd0JBQUE7RUFDQSxtQkFBQTtFQUNBLCtDQUFBO0VBQ0EseUJBQUE7QUQ1QlI7QUM4Qkk7RUFDSSx3QkFBQTtFQUNBLG1CQUFBO0VBQ0EseUNBQUE7QUQ1QlI7QUM4Qkk7RUFDSSx3QkFBQTtFQUNBLG1CQUFBO0FENUJSO0FDOEJJO0VBQ0ksMkJBQUE7RUFDQSxtQkFBQTtFQUNBLGVBbERpQjtFQW1EakIsZ0JBQUE7QUQ1QlI7QUM4Qkk7RUFDSSwyQkFBQTtBRDVCUjtBQytCUTtFQUNJLHVDQUFBO0FEN0JaO0FDK0JRO0VBQ0ksaUNBQUE7QUQ3Qlo7QUMrQlE7RUFDSSwyQkFBQTtBRDdCWjtBQ2lDUTtFQUNJLHVDQUFBO0FEL0JaO0FDaUNRO0VBQ0ksaUNBQUE7QUQvQlo7QUNpQ1E7RUFDSSwyQkFBQTtBRC9CWjtBQ21DUTtFQUNJLGVBQUE7QURqQ1o7O0FDdUNBO0VBQ0ksaUJBQUE7QURwQ0o7O0FDd0VBO0VBQ0k7SUFDSSxlQTlIZ0I7RUR5RHRCO0VDc0VNO0lBQ0ksZUFoSVk7RUQ0RHRCO0VDdUVVO0lBQ0ksdUNBQUE7SUFFQSxvQkFBQTtJQUNBLCtDQUFBO0VEdEVkO0VDd0VVO0lBQ0ksaUNBQUE7SUFDQSx5Q0FBQTtFRHRFZDtFQ3dFVTtJQUNJLDJCQUFBO0VEdEVkO0VDMEVVO0lBQ0ksdUNBQUE7RUR4RWQ7RUMwRVU7SUFDSSxpQ0FBQTtFRHhFZDtFQzBFVTtJQUNJLDJCQUFBO0VEeEVkO0VDNEVVO0lBQ0ksZUE5SlE7RURvRnRCOztFQytFRTtJQUNJLGtCQUFBO0lBQ0EsY0FBQTtJQUNBLFlBQUE7SUFDQSxTQUFBO0VENUVOOztFQ2dGRTtJQUNJLGtCQUFBO0lBQ0EsU0FBQTtFRDdFTjtBQUNGO0FFeElBO0VDNEJJLGlCQUFBO0VBQ0Esa0JBQUE7QUgrR0o7O0FFeElBO0VBQ0ksa0JBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtFQUNBLDhCQUFBO0VBRUEscUNDVWlCO0FIZ0lyQjtBRXhJSTtFQUNJLHdCQUFBO0FGMElSO0FFdklJO0VBQ0ksa0JBQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLGdDQUFBO0FGeUlSO0FFdElJO0VBQ0ksc0JBQUE7QUZ3SVI7O0FFcElBO0VBQ0k7SUFDSSxxQ0NuQlk7SURvQlosWUFBQTtFRnVJTjtBQUNGO0FFcElBO0VBQ0k7SUFDSSxjQUFBO0lBQ0Esa0JBQUE7SUFDQSxTQUFBO0lBQ0EsVUFBQTtJQUNBLGVBQUE7RUZzSU47QUFDRjtBSWpMQTtFRHNDSSxpQkFBQTtFQUNBLGtCQUFBO0FIOElKOztBSWpMQTtFQUNJO0lEdUJBLGlCQUFBO0lBQ0Esa0JBQUE7RUg4SkY7QUFDRjtBS3pMQTtFQUNJLFlBQUE7RUFDQSx5QkFBQTtBTDJMSjs7QUt4TEE7RUFDSSw0QkZXaUI7QUhnTHJCOztBS3RMQTtFQUNJLGNDbUJZO0VEbEJaLGVBQUE7QUx5TEo7O0FLdEtBO0VBRUk7SUFDSSxlQUFBO0VMd0tOOztFS3JLRTtJQVFJLFlBQUE7RUxpS047O0VLOUpFO0lBQ0ksY0FBQTtJQUNBLGtCQUFBO0lBQ0EsV0FBQTtJQUNBLFlBQUE7SUFDQSxtQkFBQTtFTGlLTjs7RUs5SkU7SUFDSSx5QkFBQTtJQUVBLGtCQUFBO0lBQ0EsbUJBQUE7SUFDQSxjQ3ZEVztFTnVOakI7O0VLN0pFOztJQUVJLG1CQzVEVztJRDZEWCxjQ3BFVztFTm9PakI7O0VLNUpFO0lBQ0ksa0JBQUE7SUFDQSxRQUFBO0lBQ0EsU0FBQTtFTCtKTjs7RUs1SkU7SUFDSSxjQy9FVztJRGdGWCx5QkN4RVc7RU51T2pCOztFSzNKRTtJQUNJLGNDckZXO0lEc0ZYLHlCQzdFVztFTjJPakI7O0VLM0pFO0lBQ0ksY0MxRlc7SUQyRlgseUJDckZXO0VObVBqQjs7RUt6SkU7SUFDSSxXQUFBO0lBQ0EsWUFBQTtFTDRKTjs7RUtsSkU7SUFDSSxlQUFBO0lBQ0Esa0JBQUE7SUFDQSxrQkFBQTtFTHFKTjs7RUsvSUU7SUFDSSxrQkFBQTtJQUNBLHFCQUFBO0lBRUEsV0FBQTtJQUNBLFlBQUE7RUxpSk47O0VLM0lFOztJQUVJLGdCQUFBO0VMOElOOztFSzlIRTtJQUNJLFdBQUE7SUFDQSxZQUFBO0VMaUlOOztFSzVIRTtJQUNJLGtCQUFBO0lBQ0EsZUFBQTtJQUNBLFdBQUE7SUFDQSxZQUFBO0VMK0hOOztFSzVIRTtJQUNJLGtCQUFBO0lBQ0EsV0FBQTtJQUNBLFlBQUE7SUFHQSxrQkFBQTtFTDZITjs7RUt6SEU7SUFFSSxtQkM1S1c7SUQ2S1gsY0NyS1c7RU5nU2pCOztFS3RIRTtJQUNJLGtCQUFBO0lBQ0EsU0FBQTtJQUNBLFdBQUE7SUFDQSxrQkFBQTtJQUNBLGdCQUFBO0VMeUhOOztFS3RIRTtJQUNJLGtCQUFBO0lBQ0EsZ0JBQUE7RUx5SE47O0VLcEhFO0lBR0ksY0NsS1E7SURtS1Isa0JBQUE7SUFFQSxTQUFBO0lBQ0EsT0FBQTtJQUNBLDZCQUFBO0lBRUksaUJBQUE7SUFDQSxvQkFBQTtJQUNBLGtCQUFBO0lBQ0EsbUJBQUE7SUFFSix5QkFBQTtFTGtITjs7RUs5R0U7SUFDSSxtQkNyTlc7SURzTlgsY0M5TVc7RU4rVGpCOztFSzdHRTtJQUNJLG1CQzNOVztJRDROWCxjQ3BOVztFTm9VakI7O0VLN0dFO0lBQ0ksYUFBQTtFTGdITjs7RUs3R0U7OztJQUdJLGNBQUE7RUxnSE47O0VLM0RFO0lBQ0ksZUFBQTtJQUNBLFdBQUE7SUFFSSxpQkFBQTtJQUNBLG9CQUFBO0VMNkRWO0FBQ0Y7QU8vVkE7RUFDSSxtQ0prQmlCO0FIK1VyQjs7QU85VkE7RUFDSSxjQUFBO0VBQ0EsV0FBQTtFQUNBLG1CQUFBO0VBQ0EseUJBQUE7RUFDQSw4QkFBQTtBUGlXSjs7QU85VkE7RUFDSSxxQkRQZTtBTndXbkI7O0FPN1ZBO0VBQ0k7SUFDSSxtQ0pUWTtFSHlXbEI7O0VPN1ZFO0lBQ0ksOEJBQUE7RVBnV047QUFDRjtBUTVYQSxTQUFBO0FBTUEsWUFBQTtBQUlBLGVBQUE7QUFNQSxlQUFBIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIioge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcblxyXG5odG1sIHtcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcclxufVxyXG5cclxuYSB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbi8vIHNlbGVjdDpmb2N1cyxcclxuLy8gdGV4dGFyZWE6Zm9jdXMsXHJcbmlucHV0OmZvY3VzIHtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbn0iLCIqIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sIHtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG5pbnB1dDpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJxdWlja3NhbmRcIjtcbiAgc3JjOiBsb2NhbChcIi4vZm9udHMvcXVpY2tzYW5kXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwicXVpY2tzYW5kXCI7XG4gIHNyYzogbG9jYWwoXCIuL2ZvbnRzL3F1aWNrc2FuZFwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJteWFubWFyIHRleHRcIjtcbiAgc3JjOiBsb2NhbChcIi4vZm9udHMvbXlhbm1hci10ZXh0XCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwibXlhbm1hciB0ZXh0XCI7XG4gIHNyYzogbG9jYWwoXCIuL2ZvbnRzL1wiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbmh0bWwge1xuICBmb250LXNpemU6IDIwcHg7XG59XG5odG1sIGgxIHtcbiAgZm9udC1mYW1pbHk6IFwicXVpY2tzYW5kXCI7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGxpbmUtaGVpZ2h0OiBjYWxjKDFyZW0gKiAxLjIgKiAxLjIgKiAxLjIgKiAxLjEpO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuaHRtbCBoMiB7XG4gIGZvbnQtZmFtaWx5OiBcInF1aWNrc2FuZFwiO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBsaW5lLWhlaWdodDogY2FsYygxcmVtICogMS4yICogMS4yICogMS4xKTtcbn1cbmh0bWwgaDMge1xuICBmb250LWZhbWlseTogXCJxdWlja3NhbmRcIjtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cbmh0bWwgcCB7XG4gIGZvbnQtZmFtaWx5OiBcIm15YW5tYXIgdGV4dFwiO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5odG1sIC5idG4sIGh0bWwgdWwgbGkge1xuICBmb250LWZhbWlseTogXCJteWFubWFyIHRleHRcIjtcbn1cbmh0bWwgaGVhZGVyIGgxIHtcbiAgZm9udC1zaXplOiBjYWxjKDFyZW0gKiAxLjIgKiAxLjIgKiAxLjIpO1xufVxuaHRtbCBoZWFkZXIgaDIge1xuICBmb250LXNpemU6IGNhbGMoMXJlbSAqIDEuMiAqIDEuMik7XG59XG5odG1sIGhlYWRlciBoMywgaHRtbCBoZWFkZXIgLmJ0biB7XG4gIGZvbnQtc2l6ZTogY2FsYygxcmVtICogMS4yKTtcbn1cbmh0bWwgbWFpbiBoMSB7XG4gIGZvbnQtc2l6ZTogY2FsYygxcmVtICogMS4yICogMS4yICogMS4yKTtcbn1cbmh0bWwgbWFpbiBoMiB7XG4gIGZvbnQtc2l6ZTogY2FsYygxcmVtICogMS4yICogMS4yKTtcbn1cbmh0bWwgbWFpbiBoMyB7XG4gIGZvbnQtc2l6ZTogY2FsYygxcmVtICogMS4yKTtcbn1cbmh0bWwgZm9vdGVyIHAge1xuICBmb250LXNpemU6IDEwcHg7XG59XG5cbi50ZXh0LWJvbGQge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc2cHgpIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICB9XG4gIGh0bWwgcCB7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICB9XG4gIGh0bWwgaGVhZGVyIGgxIHtcbiAgICBmb250LXNpemU6IGNhbGMoMXJlbSAqIDEuMiAqIDEuMiAqIDEuMik7XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgbGluZS1oZWlnaHQ6IGNhbGMoMXJlbSAqIDEuMiAqIDEuMiAqIDEuMiAqIDEuMSk7XG4gIH1cbiAgaHRtbCBoZWFkZXIgaDIge1xuICAgIGZvbnQtc2l6ZTogY2FsYygxcmVtICogMS4yICogMS4yKTtcbiAgICBsaW5lLWhlaWdodDogY2FsYygxcmVtICogMS4yICogMS4yICogMS4xKTtcbiAgfVxuICBodG1sIGhlYWRlciBoMyB7XG4gICAgZm9udC1zaXplOiBjYWxjKDFyZW0gKiAxLjIpO1xuICB9XG4gIGh0bWwgbWFpbiBoMSB7XG4gICAgZm9udC1zaXplOiBjYWxjKDFyZW0gKiAxLjIgKiAxLjIgKiAxLjIpO1xuICB9XG4gIGh0bWwgbWFpbiBoMiB7XG4gICAgZm9udC1zaXplOiBjYWxjKDFyZW0gKiAxLjIgKiAxLjIpO1xuICB9XG4gIGh0bWwgbWFpbiBoMyB7XG4gICAgZm9udC1zaXplOiBjYWxjKDFyZW0gKiAxLjIpO1xuICB9XG4gIGh0bWwgZm9vdGVyIHAge1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgfVxuXG4gIHNwYW4udGV4dC1jb3JyZWN0aW9uIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAxNHB4O1xuICAgIHRvcDogLTJweDtcbiAgfVxuXG4gIHNwYW4uaW5uZXItYnRuIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAtNnB4O1xuICB9XG59XG5oZWFkZXIge1xuICBtYXJnaW4tbGVmdDogMTZweDtcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xufVxuXG5uYXYge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luLWJvdHRvbTogY2FsYygyMHB4ICogMS41ICogMS41KTtcbn1cbm5hdiAuZm9ybS10YXNrX19idG4ge1xuICBqdXN0aWZ5LXNlbGY6IGZsZXgtc3RhcnQ7XG59XG5uYXYgaDEge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xufVxubmF2IC5zZXR0aW5nc19fZHJvcGRvd24ge1xuICBqdXN0aWZ5LXNlbGY6IGZsZXgtZW5kO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzZweCkge1xuICBuYXYge1xuICAgIG1hcmdpbi1ib3R0b206IGNhbGMoMTVweCAqIDEuNSAqIDEuNSk7XG4gICAgaGVpZ2h0OiA2NHB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzOTVweCkge1xuICBuYXYgaDEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IGF1dG87XG4gICAgbGVmdDogYXV0bztcbiAgICB0cmFuc2Zvcm06IG5vbmU7XG4gIH1cbn1cbm1haW4ge1xuICBtYXJnaW4tbGVmdDogMzJweDtcbiAgbWFyZ2luLXJpZ2h0OiAzMnB4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzZweCkge1xuICBtYWluIHtcbiAgICBtYXJnaW4tbGVmdDogMTZweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG4gIH1cbn1cbmJ1dHRvbiB7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcbn1cblxuLmFkZC10YXNrX19idG4ge1xuICBtYXJnaW4tdG9wOiBjYWxjKDIwcHggKiAxLjUpO1xufVxuXG4uZmEtdHJhc2gge1xuICBjb2xvcjogIzY2NjY2NjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzZweCkge1xuICBidXR0b24ge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuXG4gIC50ZXh0X19idG4ge1xuICAgIGhlaWdodDogNDJweDtcbiAgfVxuXG4gIC5ibG9ja19fYnRuIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nOiAxNHB4IGF1dG87XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA0MnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDE0cHg7XG4gIH1cblxuICAuZm9ybS10YXNrX19idG4ge1xuICAgIGJvcmRlcjogc29saWQgMXB4ICMyMjdDQTU7XG4gICAgcGFkZGluZzogMTRweCAxNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDE0cHg7XG4gICAgY29sb3I6ICMyMjdDQTU7XG4gIH1cblxuICAuZm9ybS10YXNrX19idG46aG92ZXIsXG4uZm9ybS10YXNrX19idG46Zm9jdXMge1xuICAgIGJhY2tncm91bmQ6ICMyMjdDQTU7XG4gICAgY29sb3I6ICNFQUY1RkI7XG4gIH1cblxuICAuZm9ybS10YXNrX19idG46YWN0aXZlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAycHg7XG4gICAgbGVmdDogMnB4O1xuICB9XG5cbiAgLmFkZC10YXNrX19idG4ge1xuICAgIGNvbG9yOiAjRUFGNUZCO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMxNjRGNjk7XG4gIH1cblxuICAuYWRkLXRhc2tfX2J0bjpob3ZlciB7XG4gICAgY29sb3I6ICNFQUY1RkI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzEyM0Y1NDtcbiAgfVxuXG4gIC5hZGQtdGFza19fYnRuOmFjdGl2ZSB7XG4gICAgY29sb3I6ICNFQUY1RkI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIzN0ZBOTtcbiAgfVxuXG4gIC5pY29uX19idG4ge1xuICAgIHdpZHRoOiAzNnB4O1xuICAgIGhlaWdodDogMzZweDtcbiAgfVxuXG4gIC5mYS1wbHVzIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuXG4gIC5zZXR0aW5nc19fZHJvcGRvd24ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDQ2cHg7XG4gICAgaGVpZ2h0OiA0NnB4O1xuICB9XG5cbiAgLnNldHRpbmdzX19kcm9wZG93biB1bCxcbi5zZXR0aW5nc19fZHJvcGRvd24gdWwgdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIH1cblxuICAuc2V0dGluZ3NfX2Ryb3Bkb3duIHVsIHtcbiAgICB3aWR0aDogMzZweDtcbiAgICBoZWlnaHQ6IDM2cHg7XG4gIH1cblxuICAuc2V0dGluZ3NfX2Ryb3Bkb3duIHVsIGxpIC5zaG93LWNsZWFyLWxpc3RfX2J0biB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICB3aWR0aDogMzZweDtcbiAgICBoZWlnaHQ6IDM2cHg7XG4gIH1cblxuICAuc2V0dGluZ3NfX2Ryb3Bkb3duIHVsIGxpIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDM2cHg7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gIC5zZXR0aW5nc19fZHJvcGRvd24gdWwgbGkgLnNob3ctY2xlYXItbGlzdF9fYnRuIGk6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICNFQUY1RkI7XG4gICAgY29sb3I6ICMxNjRGNjk7XG4gIH1cblxuICAuc2V0dGluZ3NfX2Ryb3Bkb3duIHVsIHVsIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAzN3B4O1xuICAgIHJpZ2h0OiAtMXB4O1xuICAgIG1pbi1oZWlnaHQ6IDQxLjNweDtcbiAgICBtaW4td2lkdGg6IDExNXB4O1xuICB9XG5cbiAgLnNldHRpbmdzX19kcm9wZG93biB1bCBsaSB1bCBsaSB7XG4gICAgbWluLWhlaWdodDogNDEuM3B4O1xuICAgIG1pbi13aWR0aDogMTE1cHg7XG4gIH1cblxuICBhLmNsZWFyLWxpc3RfX2J0biB7XG4gICAgY29sb3I6ICMxOTE5MTk7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogLThweDtcbiAgICBsZWZ0OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAlLCAyNSUpO1xuICAgIHBhZGRpbmctdG9wOiAxMXB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxMnB4O1xuICAgIHBhZGRpbmctbGVmdDogMTRweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNDQ0NDQ0M7XG4gIH1cblxuICBhLmNsZWFyLWxpc3RfX2J0bjpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogI0VBRjVGQjtcbiAgICBjb2xvcjogIzE2NEY2OTtcbiAgfVxuXG4gIC5zZXR0aW5nc19fZHJvcGRvd24gdWwgbGkgdWwgbGk6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICNFQUY1RkI7XG4gICAgY29sb3I6ICMxNjRGNjk7XG4gIH1cblxuICAuc2V0dGluZ3NfX2Ryb3Bkb3duIHVsIGxpIHVsIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLnNldHRpbmdzX19kcm9wZG93biB1bCBsaTpob3ZlciA+IHVsLFxuLnNldHRpbmdzX19kcm9wZG93biB1bCBsaTpmb2N1cyA+IHVsLFxuLnNldHRpbmdzX19kcm9wZG93biB1bCBsaTphY3RpdmUgPiB1bCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuICAuZmEtdHJhc2gge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICB3aWR0aDogMzZweDtcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgfVxufVxuLmFkZC10YXNrX193cmFwcGVyIHtcbiAgcGFkZGluZy10b3A6IGNhbGMoMjBweCAqIDEuNSAqIDEuNSk7XG59XG5cbi5hZGQtdGFza19faW5wdXQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM5OTk5OTk7XG4gIHBhZGRpbmc6IDExcHggY2FsYygyMHB4IC8gMS41KTtcbn1cblxuLmFkZC10YXNrX19pbnB1dDpmb2N1cyB7XG4gIGJvcmRlci1jb2xvcjogIzJDOUZEMztcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc2cHgpIHtcbiAgLmFkZC10YXNrX193cmFwcGVyIHtcbiAgICBwYWRkaW5nLXRvcDogY2FsYygxNXB4ICogMS41ICogMS41KTtcbiAgfVxuXG4gIC5hZGQtdGFza19faW5wdXQge1xuICAgIHBhZGRpbmc6IDExcHggY2FsYygxNXB4IC8gMS41KTtcbiAgfVxufVxuLyogQkFTRSAqL1xuLyogTEFZT1VUUyAqL1xuLyogQ09NUE9ORU5UUyAqL1xuLyogQU5JTUFUSU9OUyAqLyIsIi8vID09PT09PT09PT1cclxuLy8gVFlQT0dSQVBIWVxyXG4vLyA9PT09PT09PT09XHJcblxyXG4vLyAjIFRZUEVGQUNFICMxXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6IFwicXVpY2tzYW5kXCI7XHJcbiAgICBzcmM6IGxvY2FsKFwiLi9mb250cy9xdWlja3NhbmRcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XHJcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiBcInF1aWNrc2FuZFwiO1xyXG4gICAgc3JjOiBsb2NhbChcIi4vZm9udHMvcXVpY2tzYW5kXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbn1cclxuXHJcbi8vICMgVFlQRUZBQ0UgIzJcclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogXCJteWFubWFyIHRleHRcIjtcclxuICAgIHNyYzogbG9jYWwoXCIuL2ZvbnRzL215YW5tYXItdGV4dFwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbn1cclxuXHJcbkBmb250LWZhY2UgIHtcclxuICAgIGZvbnQtZmFtaWx5OiBcIm15YW5tYXIgdGV4dFwiO1xyXG4gICAgc3JjOiBsb2NhbChcIi4vZm9udHMvXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbn1cclxuXHJcbi8vICEgZS5nLiA+PlxyXG4vLyBGT05UIEZBQ0VcclxuJHByaW1hcnktZm9udGZhY2U6IFwicXVpY2tzYW5kXCIsIHNhbnMtc2VyaWYsJ1RhaG9tYSc7XHJcbiRzZWNvbmRhcnktZm9udGZhY2U6IFwibXlhbm1hciB0ZXh0XCIsIHNhbnMtc2VyaWYsJ0FyaWFsJztcclxuJHRleHQtZm9udGZhY2U6IFwibXlhbm1hciB0ZXh0XCIsIHNhbnMtc2VyaWYsJ0FyaWFsJztcclxuXHJcbi8vIEJBU0UgVkFMVUVcclxuJG1vYmlsZS1iYXNlLWZvbnQtc2l6ZTogMTVweDtcclxuJGRlc2t0b3AtYmFzZS1mb250LXNpemU6IDIwcHg7XHJcblxyXG4vLyBNRE9VTEFSLVNDQUxFXHJcbi8vIE1vYmlsZVxyXG4kbW9iaWxlLWhlYWRlci10ZXh0LXNjYWxlLXJhdGlvOiAxLjI7XHJcbiRtb2JpbGUtYm9keS10ZXh0LXNjYWxlLXJhdGlvOiAxLjI7XHJcbi8vIFRhYmxldC1EZXNrdG9wXHJcbiRkZXNrdG9wLWhlYWRlci10ZXh0LXNjYWxlLXJhdGlvOiAxLjI7XHJcbiRkZXNrdG9wLWJvZHktdGV4dC1zY2FsZS1yYXRpbzogMS4yO1xyXG4vLyAhIDw8XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyAjIERFRkFVTFQgfHwgREVTS1RPUCBWSUVXXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIEZvbnQgYmFzZTogMjBweFxyXG5cclxuLy8gTW9kdWxhciBTY2FsZTogMS4yXHJcblxyXG4vLyBoMSAtIDM0LjU2cHggfCAxLjcyOGVtXHJcbi8vIGgyIC0gMjguOHB4IHwgMS40NGVtXHJcbi8vIGgzIC0gMjRweCB8IDEuMmVtXHJcbi8vIHAgLSAyMHB4IHwgMWVtXHJcbi8vIGNhcHRpb24gLVxyXG5cclxuLy8gPyBDb25zaWRlcjpcclxuLy8gVHlwZVxyXG4vLyAtIGxldHRlciBzcGFjaW5nIC8gdHJhY2tpbmdcclxuLy8gTWVkaWEgcXVlcnlcclxuLy8gLSBtYXgtaGVpZ2h0XHJcblxyXG5odG1sIHtcclxuICAgIGZvbnQtc2l6ZTogJGRlc2t0b3AtYmFzZS1mb250LXNpemU7XHJcbiAgICBoMSB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwicXVpY2tzYW5kXCI7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgICBsaW5lLWhlaWdodDogY2FsYygxcmVtICogI3skZGVza3RvcC1oZWFkZXItdGV4dC1zY2FsZS1yYXRpb30gKiAjeyRkZXNrdG9wLWhlYWRlci10ZXh0LXNjYWxlLXJhdGlvfSAqICN7JGRlc2t0b3AtaGVhZGVyLXRleHQtc2NhbGUtcmF0aW99ICogMS4xKTtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgfVxyXG4gICAgaDIge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcInF1aWNrc2FuZFwiO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IGNhbGMoMXJlbSAqICN7JGRlc2t0b3AtaGVhZGVyLXRleHQtc2NhbGUtcmF0aW99ICogI3skZGVza3RvcC1oZWFkZXItdGV4dC1zY2FsZS1yYXRpb30gKiAxLjEpO1xyXG4gICAgfVxyXG4gICAgaDMge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcInF1aWNrc2FuZFwiO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICB9XHJcbiAgICBwIHtcclxuICAgICAgICBmb250LWZhbWlseTogXCJteWFubWFyIHRleHRcIjtcclxuICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogJGRlc2t0b3AtYmFzZS1mb250LXNpemU7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICAgIH1cclxuICAgIC5idG4sIHVsIGxpIHtcclxuICAgICAgICBmb250LWZhbWlseTogXCJteWFubWFyIHRleHRcIjtcclxuICAgIH1cclxuICAgIGhlYWRlciB7XHJcbiAgICAgICAgaDEge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IGNhbGMoMXJlbSAqICN7JGRlc2t0b3AtaGVhZGVyLXRleHQtc2NhbGUtcmF0aW99ICogI3skZGVza3RvcC1oZWFkZXItdGV4dC1zY2FsZS1yYXRpb30gKiAjeyRkZXNrdG9wLWhlYWRlci10ZXh0LXNjYWxlLXJhdGlvfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGgyIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiBjYWxjKDFyZW0gKiAjeyRkZXNrdG9wLWhlYWRlci10ZXh0LXNjYWxlLXJhdGlvfSAqICN7JGRlc2t0b3AtaGVhZGVyLXRleHQtc2NhbGUtcmF0aW99KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaDMsIC5idG4ge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IGNhbGMoMXJlbSAqICN7JGRlc2t0b3AtaGVhZGVyLXRleHQtc2NhbGUtcmF0aW99KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBtYWluIHtcclxuICAgICAgICBoMSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogY2FsYygxcmVtICogI3skZGVza3RvcC1ib2R5LXRleHQtc2NhbGUtcmF0aW99ICogI3skZGVza3RvcC1ib2R5LXRleHQtc2NhbGUtcmF0aW99ICogI3skZGVza3RvcC1ib2R5LXRleHQtc2NhbGUtcmF0aW99KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaDIge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IGNhbGMoMXJlbSAqICN7JGRlc2t0b3AtYm9keS10ZXh0LXNjYWxlLXJhdGlvfSAqICN7JGRlc2t0b3AtYm9keS10ZXh0LXNjYWxlLXJhdGlvfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGgzIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiBjYWxjKDFyZW0gKiAjeyRkZXNrdG9wLWJvZHktdGV4dC1zY2FsZS1yYXRpb30pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGZvb3RlciB7XHJcbiAgICAgICAgcCB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vICMgRm9udCBTdHlsZXNcclxuLnRleHQtYm9sZCB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICMgVEFCTEVUIFZJRVcgQU5EIExJTUlUU1xyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gRm9udCBiYXNlOiAyMHB4XHJcblxyXG4vLyBNb2R1bGFyIFNjYWxlOiAxLjJcclxuXHJcbi8vIGgxIC0gMzQuNTZweCB8IDEuNzI4ZW1cclxuLy8gaDIgLSAyOC44cHggfCAxLjQ0ZW1cclxuLy8gaDMgLSAyNHB4IHwgMS4yZW1cclxuLy8gcCAtIDIwcHggfCAxZW1cclxuLy8gY2FwdGlvbiAtXHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG5cclxufVxyXG5cclxuLy8gc3R5bGVzIGdvIGhlcmVcclxuXHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gIyBNT0JJTEUgVklFVyBBTkQgTElNSVRTXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBGb250IGJhc2U6IDE1cHhcclxuXHJcbi8vIE1vZHVsYXIgU2NhbGU6IDEuMlxyXG5cclxuLy8gaDEgLSAyNS45MnB4IHwgMS43MjhlbVxyXG4vLyBoMiAtIDIxLjZweCB8IDEuNDRlbVxyXG4vLyBoMyAtIDE4cHggfCAxLjJlbVxyXG4vLyBwIC0gMTVcclxuLy8gY2FwdGlvbiAtXHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzZweCkge1xyXG4gICAgaHRtbCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAkbW9iaWxlLWJhc2UtZm9udC1zaXplO1xyXG4gICAgICAgIHAge1xyXG4gICAgICAgICAgICBmb250LXNpemU6ICRtb2JpbGUtYmFzZS1mb250LXNpemU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGhlYWRlciB7XHJcbiAgICAgICAgICAgIGgxIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogY2FsYygxcmVtICogI3skbW9iaWxlLWhlYWRlci10ZXh0LXNjYWxlLXJhdGlvfSAqICN7JG1vYmlsZS1oZWFkZXItdGV4dC1zY2FsZS1yYXRpb30gKiAjeyRtb2JpbGUtaGVhZGVyLXRleHQtc2NhbGUtcmF0aW99KTtcclxuICAgICAgICAgICAgICAgIC8vIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogY2FsYygxcmVtICogI3skbW9iaWxlLWhlYWRlci10ZXh0LXNjYWxlLXJhdGlvfSAqICN7JG1vYmlsZS1oZWFkZXItdGV4dC1zY2FsZS1yYXRpb30gKiAjeyRtb2JpbGUtaGVhZGVyLXRleHQtc2NhbGUtcmF0aW99ICogMS4xKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBoMiB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IGNhbGMoMXJlbSAqICN7JG1vYmlsZS1oZWFkZXItdGV4dC1zY2FsZS1yYXRpb30gKiAjeyRtb2JpbGUtaGVhZGVyLXRleHQtc2NhbGUtcmF0aW99KTtcclxuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiBjYWxjKDFyZW0gKiAjeyRtb2JpbGUtaGVhZGVyLXRleHQtc2NhbGUtcmF0aW99ICogI3skbW9iaWxlLWhlYWRlci10ZXh0LXNjYWxlLXJhdGlvfSAqIDEuMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaDMge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiBjYWxjKDFyZW0gKiAjeyRtb2JpbGUtaGVhZGVyLXRleHQtc2NhbGUtcmF0aW99KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBtYWluIHtcclxuICAgICAgICAgICAgaDEge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiBjYWxjKDFyZW0gKiAjeyRtb2JpbGUtYm9keS10ZXh0LXNjYWxlLXJhdGlvfSAqICN7JG1vYmlsZS1ib2R5LXRleHQtc2NhbGUtcmF0aW99ICogI3skbW9iaWxlLWJvZHktdGV4dC1zY2FsZS1yYXRpb30pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGgyIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogY2FsYygxcmVtICogI3skbW9iaWxlLWJvZHktdGV4dC1zY2FsZS1yYXRpb30gKiAjeyRtb2JpbGUtYm9keS10ZXh0LXNjYWxlLXJhdGlvfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaDMge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiBjYWxjKDFyZW0gKiAjeyRtb2JpbGUtYm9keS10ZXh0LXNjYWxlLXJhdGlvfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZm9vdGVyIHtcclxuICAgICAgICAgICAgcCB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6ICRtb2JpbGUtYmFzZS1mb250LXNpemU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3Bhbi50ZXh0LWNvcnJlY3Rpb24ge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBoZWlnaHQ6IDE0cHg7XHJcbiAgICAgICAgdG9wOiAtMnB4XHJcbiAgICB9XHJcblxyXG4gICAgLy8gISBXSVAgPj5cclxuICAgIHNwYW4uaW5uZXItYnRuIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgdG9wOiAtNnB4O1xyXG4gICAgfVxyXG4gICAgLy8gISA8PFxyXG59XHJcbiIsIkB1c2UgJy4uL2Jhc2Uvc3BhY2UnIGFzIHNwYWNlO1xyXG5cclxuaGVhZGVyIHtcclxuICAgIEBpbmNsdWRlIHNwYWNlLm1vYmlsZS1tYXJnaW4tcHJlc2V0O1xyXG59XHJcblxyXG5uYXYge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgLy8gaGVpZ2h0OiA2NHB4OyAvLyAhIGR1ZSB0byBjaGFuZ2VcclxuICAgIG1hcmdpbi1ib3R0b206IHNwYWNlLiRkZXNrdG9wLXNwYWNlLWx2LTI7XHJcblxyXG4gICAgLmZvcm0tdGFza19fYnRuIHtcclxuICAgICAgICBqdXN0aWZ5LXNlbGY6IGZsZXgtc3RhcnQ7XHJcbiAgICB9XHJcblxyXG4gICAgaDEge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICB9XHJcblxyXG4gICAgLnNldHRpbmdzX19kcm9wZG93biB7XHJcbiAgICAgICAganVzdGlmeS1zZWxmOiBmbGV4LWVuZDtcclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc2cHgpIHtcclxuICAgIG5hdiB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogc3BhY2UuJG1vYmlsZS1zcGFjZS1sdi0yO1xyXG4gICAgICAgIGhlaWdodDogNjRweDtcclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzk1cHgpIHtcclxuICAgIG5hdiBoMSB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHRvcDogYXV0bztcclxuICAgICAgICBsZWZ0OiBhdXRvO1xyXG4gICAgICAgIHRyYW5zZm9ybTogbm9uZTtcclxuICAgIH1cclxufSIsIi8vID09PT09XHJcbi8vIFNQQUNFXHJcbi8vID09PT09XHJcblxyXG5AdXNlICd0eXBvZ3JhcGh5JyBhcyAqO1xyXG5cclxuJGxpbmUtaGVpZ2h0OiAxLjU7XHJcbi8vICRtb2JpbGUtYmFzZS1mb250LXNpemU6IHh4XHJcbi8vICRkZXNrdG9wLWJhc2UtZm9udC1zaXplOiB4eFxyXG5cclxuLy8gTU9CSUxFIFNQQVRJQUwgU1lTVEVNXHJcbiRtb2JpbGUtc3BhY2UtbHYtcXVhcnRlcjogY2FsYygjeyRtb2JpbGUtYmFzZS1mb250LXNpemV9IC8gJGxpbmUtaGVpZ2h0IC8gI3skbGluZS1oZWlnaHR9KTtcclxuJG1vYmlsZS1zcGFjZS1sdi1oYWxmOiBjYWxjKCN7JG1vYmlsZS1iYXNlLWZvbnQtc2l6ZX0gLyAjeyRsaW5lLWhlaWdodH0pO1xyXG4kbW9iaWxlLXNwYWNlLWx2LTE6IGNhbGMoI3skbW9iaWxlLWJhc2UtZm9udC1zaXplfSAqICN7JGxpbmUtaGVpZ2h0fSk7XHJcbiRtb2JpbGUtc3BhY2UtbHYtMjogY2FsYygjeyRtb2JpbGUtYmFzZS1mb250LXNpemV9ICogI3skbGluZS1oZWlnaHR9ICogI3skbGluZS1oZWlnaHR9KTtcclxuJG1vYmlsZS1zcGFjZS1sdi0zOiBjYWxjKCN7JG1vYmlsZS1iYXNlLWZvbnQtc2l6ZX0gKiAjeyRsaW5lLWhlaWdodH0gKiAjeyRsaW5lLWhlaWdodH0gKiAjeyRsaW5lLWhlaWdodH0pO1xyXG4kbW9iaWxlLXNwYWNlLWx2LTQ6IGNhbGMoI3skbW9iaWxlLWJhc2UtZm9udC1zaXplfSAqICN7JGxpbmUtaGVpZ2h0fSAqICN7JGxpbmUtaGVpZ2h0fSAqICN7JGxpbmUtaGVpZ2h0fSAqICN7JGxpbmUtaGVpZ2h0fSk7XHJcbiRtb2JpbGUtc3BhY2UtbHYtNTogY2FsYygjeyRtb2JpbGUtYmFzZS1mb250LXNpemV9ICogI3skbGluZS1oZWlnaHR9ICogI3skbGluZS1oZWlnaHR9ICogI3skbGluZS1oZWlnaHR9ICogI3skbGluZS1oZWlnaHR9ICogI3skbGluZS1oZWlnaHR9KTtcclxuXHJcbi8vIERFU0tUT1AgKEFORCBUQUJMRVQpIFNQQVRJQUwgU1lTVEVNXHJcbiRkZXNrdG9wLXNwYWNlLWx2LXF1YXJ0ZXI6IGNhbGMoI3skZGVza3RvcC1iYXNlLWZvbnQtc2l6ZX0gLyAjeyRsaW5lLWhlaWdodH0gLyAjeyRsaW5lLWhlaWdodH0pO1xyXG4kZGVza3RvcC1zcGFjZS1sdi1oYWxmOiBjYWxjKCN7JGRlc2t0b3AtYmFzZS1mb250LXNpemV9IC8gI3skbGluZS1oZWlnaHR9KTtcclxuJGRlc2t0b3Atc3BhY2UtbHYtMTogY2FsYygjeyRkZXNrdG9wLWJhc2UtZm9udC1zaXplfSAqICN7JGxpbmUtaGVpZ2h0fSk7XHJcbiRkZXNrdG9wLXNwYWNlLWx2LTI6IGNhbGMoI3skZGVza3RvcC1iYXNlLWZvbnQtc2l6ZX0gKiAjeyRsaW5lLWhlaWdodH0gKiAjeyRsaW5lLWhlaWdodH0pO1xyXG4kZGVza3RvcC1zcGFjZS1sdi0zOiBjYWxjKCN7JGRlc2t0b3AtYmFzZS1mb250LXNpemV9ICogI3skbGluZS1oZWlnaHR9ICogI3skbGluZS1oZWlnaHR9ICogI3skbGluZS1oZWlnaHR9KTtcclxuJGRlc2t0b3Atc3BhY2UtbHYtNDogY2FsYygjeyRkZXNrdG9wLWJhc2UtZm9udC1zaXplfSAqICN7JGxpbmUtaGVpZ2h0fSAqICN7JGxpbmUtaGVpZ2h0fSAqICN7JGxpbmUtaGVpZ2h0fSAqICN7JGxpbmUtaGVpZ2h0fSk7XHJcbiRkZXNrdG9wLXNwYWNlLWx2LTU6IGNhbGMoI3skZGVza3RvcC1iYXNlLWZvbnQtc2l6ZX0gKiAjeyRsaW5lLWhlaWdodH0gKiAjeyRsaW5lLWhlaWdodH0gKiAjeyRsaW5lLWhlaWdodH0gKiAjeyRsaW5lLWhlaWdodH0gKiAjeyRsaW5lLWhlaWdodH0pO1xyXG5cclxuLy8gTUFSR0lOIFBSRVNFVFNcclxuQG1peGluIG1vYmlsZS1tYXJnaW4tcHJlc2V0IHtcclxuICAgIG1hcmdpbi1sZWZ0OiAxNnB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xyXG59XHJcblxyXG5AbWl4aW4gbW9iaWxlLXBhZGRpbmctcHJlc2V0IHtcclxuICAgIHBhZGRpbmctbGVmdDogMTZweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDE2cHg7XHJcbn1cclxuXHJcbkBtaXhpbiB0YWJsZXQtbWFyZ2luLXByZXNldCB7XHJcbiAgICBtYXJnaW4tbGVmdDogMzJweDtcclxuICAgIG1hcmdpbi1yaWdodDogMzJweDtcclxufVxyXG5cclxuQG1peGluIHRhYmxldC1wYWRkaW5nLXByZXNldCB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDMycHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAzMnB4O1xyXG59XHJcblxyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vICMgTU9CSUxFIFZJRVcgQU5EIExJTUlUU1xyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA1NjhweCkge1xyXG5cclxufVxyXG4iLCJAdXNlICcuLi9iYXNlL3NwYWNlJyBhcyBzcGFjZTtcclxuXHJcbm1haW4ge1xyXG4gICAgQGluY2x1ZGUgc3BhY2UudGFibGV0LW1hcmdpbi1wcmVzZXQ7XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICBtYWluIHtcclxuICAgICAgICBAaW5jbHVkZSBzcGFjZS5tb2JpbGUtbWFyZ2luLXByZXNldDtcclxuICAgIH1cclxufSIsIkB1c2UgJy4uL2Jhc2UvdHlwb2dyYXBoeScgYXMgKjtcclxuQHVzZSAnLi4vYmFzZS9jb2xvcicgYXMgKjtcclxuQHVzZSAnLi4vYmFzZS9zcGFjZScgYXMgc3BhY2U7XHJcblxyXG4vLyBSRVNFVFxyXG5idXR0b24ge1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcclxufVxyXG5cclxuLmFkZC10YXNrX19idG4ge1xyXG4gICAgbWFyZ2luLXRvcDogc3BhY2UuJGRlc2t0b3Atc3BhY2UtbHYtMTtcclxufVxyXG5cclxuXHJcbi8vICEgV0lQID4+XHJcbi5mYS10cmFzaCB7XHJcbiAgICBjb2xvcjogJHRleHQtY29sb3ItNjA7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5mYS10cmFzaDpob3ZlcixcclxuLmZhLXRyYXNoOmZvY3VzLFxyXG4uZmEtdHJhc2g6YWN0aXZlIHtcclxuICAgIC8vIGJhY2tncm91bmQ6ICRwcmltYXJ5LWNvbG9yLTA1O1xyXG4gICAgLy8gY29sb3I6ICRwcmltYXJ5LWNvbG9yLTcwO1xyXG59XHJcblxyXG4vLyAuc2V0dGluZ3NfX2Ryb3Bkb3duOmhvdmVyID4gbGksXHJcbi8vIC5zZXR0aW5nc19fZHJvcGRvd246Zm9jdXMgPiBsaSxcclxuLy8gLnNldHRpbmdzX19kcm9wZG93bjphY3RpdmUgPiBsaSB7XHJcbi8vICAgICBkaXNwbGF5OiBpbmxpbmU7XHJcbi8vIH1cclxuXHJcbi8vICEgV0lQIDw8XHJcblxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc2cHgpIHtcclxuICAgIC8vICMgTUFJTiBCVVRUT04gQ09NUE9ORU5UU1xyXG4gICAgYnV0dG9uIHtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgLnRleHRfX2J0biB7XHJcbiAgICAgICAgLy8gPyBSZWR1bmRhbnQgb3Igbm90Pywgc2VlIGF0IGluZGV4Lmh0bWwgZmlsZSB0b28gKHRoYXQncyBhY2NvbXBhbmllZCB3aXRoICdmb3JtLXRhc2tfX2J0bicpXHJcbiAgICAgICAgLy8gcGFkZGluZzoge1xyXG4gICAgICAgIC8vICAgICB0b3A6IDE0cHg7XHJcbiAgICAgICAgLy8gICAgIGJvdHRvbTogMTRweDtcclxuICAgICAgICAvLyAgICAgbGVmdDogMjhweDtcclxuICAgICAgICAvLyAgICAgcmlnaHQ6IDI4cHg7XHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIGhlaWdodDogNDJweDtcclxuICAgIH1cclxuXHJcbiAgICAuYmxvY2tfX2J0biB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgcGFkZGluZzogMTRweCBhdXRvO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogNDJweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxNHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5mb3JtLXRhc2tfX2J0biB7XHJcbiAgICAgICAgYm9yZGVyOiBzb2xpZCAxcHggJHByaW1hcnktY29sb3ItNjU7XHJcbiAgICAgICAgLy8gcGFkZGluZzogMTRweCAyOHB4O1xyXG4gICAgICAgIHBhZGRpbmc6IDE0cHggMTRweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxNHB4O1xyXG4gICAgICAgIGNvbG9yOiAkcHJpbWFyeS1jb2xvci02NTtcclxuICAgIH1cclxuXHJcbiAgICAuZm9ybS10YXNrX19idG46aG92ZXIsXHJcbiAgICAuZm9ybS10YXNrX19idG46Zm9jdXMge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICRwcmltYXJ5LWNvbG9yLTY1O1xyXG4gICAgICAgIGNvbG9yOiAkcHJpbWFyeS1jb2xvci0wNTtcclxuICAgIH1cclxuXHJcbiAgICAvLyA/IENoYW5nZSA6QWN0aXZlIHRvIGNvbG9yIG9yaWVudGVkIFVJL1VYICg/KVxyXG4gICAgLmZvcm0tdGFza19fYnRuOmFjdGl2ZSB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHRvcDogMnB4O1xyXG4gICAgICAgIGxlZnQ6IDJweDtcclxuICAgIH1cclxuXHJcbiAgICAuYWRkLXRhc2tfX2J0biB7XHJcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yLTA1O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yLTcwO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAuYWRkLXRhc2tfX2J0bjpob3ZlciB7XHJcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yLTA1O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yLTgwO1xyXG4gICAgfVxyXG5cclxuICAgIC5hZGQtdGFza19fYnRuOmFjdGl2ZSB7XHJcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yLTA1O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yLTYwO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvLyAjIENUQSBJQ09OU1xyXG4gICAgLmljb25fX2J0biB7XHJcbiAgICAgICAgd2lkdGg6IDM2cHg7XHJcbiAgICAgICAgaGVpZ2h0OiAzNnB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5mYSB7XHJcbiAgICAgICAgLy8gd2lkdGg6IDM2cHg7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUGx1cyBJY29uXHJcbiAgICAvLyBVc2UgQ2FzZTpcclxuICAgIC8vIC0gRm9ybSBUYXNrXHJcbiAgICAuZmEtcGx1cyB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gISBXSVAgPj5cclxuICAgIC8vICMgQ1RBOiBjbGVhci1saXN0XHJcbiAgICAvLyBDb250YWluZXIgXCJzZXR0aW5nc19fZHJvcGRvd25cIlxyXG4gICAgLnNldHRpbmdzX19kcm9wZG93biB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAvLyAjIFdpZHRoIG9mIFwidHJhc2ggSWNvblwiIHRvb1xyXG4gICAgICAgIHdpZHRoOiA0NnB4O1xyXG4gICAgICAgIGhlaWdodDogNDZweDtcclxuICAgICAgICAvLyAhIGFkZCB3aWR0aFxyXG4gICAgICAgIC8vICEgYWRkIG1hcmdpblxyXG4gICAgfVxyXG5cclxuICAgIC8vIFJlbW92ZSBkZWZhdWx0IGxpc3Qgc3R5bGVzXHJcbiAgICAuc2V0dGluZ3NfX2Ryb3Bkb3duIHVsLFxyXG4gICAgLnNldHRpbmdzX19kcm9wZG93biB1bCB1bCB7XHJcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIH1cclxuXHJcbiAgICAvLyAhIFRlc3RpbmcgPj5cclxuICAgIC5zZXR0aW5nc19fZHJvcGRvd24gdWwsXHJcbiAgICAuc2V0dGluZ3NfX2Ryb3Bkb3duIHVsIHVsIHtcclxuICAgIH1cclxuXHJcbiAgICAvLyAhIDw8IFRlc3RpbmdcclxuXHJcbiAgICAvLyBQcmVzZXQgZm9yIFBzdWVkbzpob3ZlclxyXG4gICAgLnNldHRpbmdzX19kcm9wZG93biB1bCB1bCB7XHJcbiAgICAgICAgLy8gZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBNYXRjaCBcInRyYXNoXCIgSWNvbiBTaXplIC0gMzZ3IHggMzZoXHJcbiAgICAuc2V0dGluZ3NfX2Ryb3Bkb3duIHVsIHtcclxuICAgICAgICB3aWR0aDogMzZweDtcclxuICAgICAgICBoZWlnaHQ6IDM2cHg7XHJcbiAgICAgICAgLy8gYm9yZGVyOiBncmVlbiBzb2xpZCAxcHg7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ29udGFpbmluZyB0aGUgXCJ0cmFzaCBidXR0b25cIiBJY29uIGFuZCBpdHMgY29tcG9uZW50c1xyXG4gICAgLnNldHRpbmdzX19kcm9wZG93biB1bCBsaSAuc2hvdy1jbGVhci1saXN0X19idG4ge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XHJcbiAgICAgICAgd2lkdGg6IDM2cHg7XHJcbiAgICAgICAgaGVpZ2h0OiAzNnB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5zZXR0aW5nc19fZHJvcGRvd24gdWwgbGkge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB3aWR0aDogMzZweDtcclxuICAgICAgICBoZWlnaHQ6IDM2cHg7XHJcbiAgICAgICAgLy8gd2lkdGg6IDQ2cHg7IC8vICEgRGVza3RvcCBkaW1lbnNpb25zXHJcbiAgICAgICAgLy8gaGVpZ2h0OiA0NnB4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBBTklNQVRJT05TIChQc2V1ZG8gQ29kZXMpXHJcbiAgICAuc2V0dGluZ3NfX2Ryb3Bkb3duIHVsIGxpIC5zaG93LWNsZWFyLWxpc3RfX2J0biBpOmhvdmVyIHtcclxuICAgICAgICAvLyAhIENvbG9yIHRoYXQgaG9sZHNcclxuICAgICAgICBiYWNrZ3JvdW5kOiAkcHJpbWFyeS1jb2xvci0wNTtcclxuICAgICAgICBjb2xvcjogJHByaW1hcnktY29sb3ItNzA7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gIyBDVEE6IFRleHQgXCJDbGVhciBMaXN0XCIgYnV0dG9uXHJcbiAgICAvLyAqIFN0eWxpemUgRHJvcGRvd25cclxuICAgIC5zZXR0aW5nc19fZHJvcGRvd24gdWwgdWwge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDM3cHg7XHJcbiAgICAgICAgcmlnaHQ6IC0xcHg7XHJcbiAgICAgICAgbWluLWhlaWdodDogNDEuM3B4O1xyXG4gICAgICAgIG1pbi13aWR0aDogMTE1cHg7XHJcbiAgICB9XHJcblxyXG4gICAgLnNldHRpbmdzX19kcm9wZG93biB1bCBsaSB1bCBsaSB7XHJcbiAgICAgICAgbWluLWhlaWdodDogNDEuM3B4O1xyXG4gICAgICAgIG1pbi13aWR0aDogMTE1cHg7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gXCJhbmNob3JcIiB0YWcgYnV0dG9uXHJcbiAgICAvLyAqIEhvdGZpeCBjZW50ZXIgdGV4dCBcIkNsZWFyIExpc3RcIlxyXG4gICAgYS5jbGVhci1saXN0X19idG4ge1xyXG4gICAgICAgIC8vIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIC8vIGhlaWdodDogMTAwJTtcclxuICAgICAgICBjb2xvcjogJHRleHQtY29sb3ItOTA7IC8vID8gVW5kZXIgQ29uc2lkZXJhdGlvbnMgdnMuICMwMDAwMDAgdnMuIGxpZ2h0ZXIgc2hhZGVcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgLy8gdG9wOiAwO1xyXG4gICAgICAgIHRvcDogLThweDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAlLCAyNSUpO1xyXG4gICAgICAgIHBhZGRpbmc6IHtcclxuICAgICAgICAgICAgdG9wOiAxMXB4O1xyXG4gICAgICAgICAgICBib3R0b206IDEycHg7XHJcbiAgICAgICAgICAgIGxlZnQ6IDE0cHg7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAxNHB4O1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHRleHQtY29sb3ItMjA7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQU5JTUFUSU9OUyAoUHNldWRvIENvZGUpXHJcbiAgICBhLmNsZWFyLWxpc3RfX2J0bjpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJHByaW1hcnktY29sb3ItMDU7XHJcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yLTcwO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEFOSU1BVElPTlMgKFBzZXVkbyBDb2RlKVxyXG4gICAgLnNldHRpbmdzX19kcm9wZG93biB1bCBsaSB1bCBsaTpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJHByaW1hcnktY29sb3ItMDU7XHJcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yLTcwO1xyXG4gICAgfVxyXG5cclxuICAgIC5zZXR0aW5nc19fZHJvcGRvd24gdWwgbGkgdWwge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcblxyXG4gICAgLnNldHRpbmdzX19kcm9wZG93biB1bCBsaTpob3ZlciA+IHVsLFxyXG4gICAgLnNldHRpbmdzX19kcm9wZG93biB1bCBsaTpmb2N1cyA+IHVsLFxyXG4gICAgLnNldHRpbmdzX19kcm9wZG93biB1bCBsaTphY3RpdmUgPiB1bCB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcblxyXG5cclxuXHJcblxyXG4gICAgLy8gdWwuc2V0dGluZ3NfX2Ryb3Bkb3duIHtcclxuICAgIC8vICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgLy8gICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIC8vICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgLy8gdWwgbGkge1xyXG4gICAgLy8gICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIC8vICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgLy8gICAgIC8vICEgVGVzdGluZyBBcmVhID4+XHJcbiAgICAvLyAgICAgLy8gZGlzcGxheTogaW5saW5lO1xyXG4gICAgLy8gICAgIC8vICEgPDxcclxuICAgIC8vICAgICB0b3A6IDM4cHg7XHJcbiAgICAvLyAgICAgLy8gbGVmdDogLTU0cHg7XHJcbiAgICAvLyAgICAgbGVmdDogLTgwcHg7XHJcbiAgICAvLyAgICAgLy8gYm90dG9tOiAwO1xyXG4gICAgLy8gICAgIG1pbi1oZWlnaHQ6IDQxLjNweDtcclxuICAgIC8vICAgICAvLyBtaW4td2lkdGg6IDkwcHg7XHJcbiAgICAvLyAgICAgLy8gbWluLXdpZHRoOiAxMzdweDtcclxuICAgIC8vICAgICBtaW4td2lkdGg6IDExNXB4O1xyXG4gICAgLy8gICAgIC8vIG1heC1oZWlnaHQ6IDE0cHg7XHJcbiAgICAvLyAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIC8vICAgICBwYWRkaW5nOiAxNHB4O1xyXG4gICAgLy8gICAgIGJvcmRlcjogMXB4IHNvbGlkICR0ZXh0LWNvbG9yLTIwO1xyXG4gICAgLy8gICAgIC8vICEgQWRkIGJveC1zaGFkb3dcclxuICAgIC8vICAgICB6LWluZGV4OiAxO1xyXG4gICAgLy8gICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIC8vIH1cclxuXHJcbiAgICAvLyB1bCBsaTpob3ZlcixcclxuICAgIC8vIHVsIGxpOmZvY3VzLFxyXG4gICAgLy8gdWwgbGk6YWN0aXZlIHtcclxuICAgICAgICAvLyBiYWNrZ3JvdW5kOiAkcHJpbWFyeS1jb2xvci0wNTtcclxuICAgIC8vIH1cclxuXHJcbiAgICAvLyB1bCBsaTpob3ZlciBhLFxyXG4gICAgLy8gdWwgbGk6Zm9jdXMgYSxcclxuICAgIC8vIHVsIGxpOmFjdGl2ZSBhIHtcclxuICAgIC8vICAgICBjb2xvcjogJHByaW1hcnktY29sb3ItNzA7XHJcbiAgICAvLyB9XHJcblxyXG5cclxuXHJcbiAgICAvLyBUcmFzaCBJY29uXHJcbiAgICAvLyBVc2UgQ2FzZTpcclxuICAgIC8vIC0gQ2xlYXIgTGlzdCBidXR0b25cclxuICAgIC8vIC0gXCJZZXMsIERlbGV0ZSBMaXN0XCIgYnV0dG9uXHJcbiAgICAuZmEtdHJhc2gge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgICB3aWR0aDogMzZweDtcclxuICAgICAgICBwYWRkaW5nOiB7XHJcbiAgICAgICAgICAgIHRvcDogMTBweDtcclxuICAgICAgICAgICAgYm90dG9tOiAxMHB4O1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgLy8gaGVpZ2h0OiAzNnB4O1xyXG4gICAgfVxyXG5cclxuICAgIC8vICEgV0lQIDw8XHJcbn0iLCIvLyA9PT09PVxyXG4vLyBDT0xPUlxyXG4vLyA9PT09PVxyXG5cclxuLy8gXCJvY2VhbiBibHVlXCJcclxuJHByaW1hcnktY29sb3ItMDU6ICNFQUY1RkI7IC8vIFVTRURcclxuJHByaW1hcnktY29sb3ItMTA6ICNENUVDRjY7XHJcbiRwcmltYXJ5LWNvbG9yLTIwOiAjQUJEOEVEO1xyXG4kcHJpbWFyeS1jb2xvci0zMDogIzgwQzVFNDtcclxuJHByaW1hcnktY29sb3ItNDA6ICM1NkIyREM7XHJcbiRwcmltYXJ5LWNvbG9yLTUwOiAjMkM5RkQzOyAvLyBVU0VEXHJcbiRwcmltYXJ5LWNvbG9yLTYwOiAjMjM3RkE5O1xyXG4kcHJpbWFyeS1jb2xvci02NTogIzIyN0NBNTsgLy8gKiBVU0VEIHVuaXF1ZSB0byBcIisgRm9ybSBUYXNrXCIgYnV0dG9uXHJcbiRwcmltYXJ5LWNvbG9yLTcwOiAjMTY0RjY5OyAvLyBNQUlOXHJcbiRwcmltYXJ5LWNvbG9yLTgwOiAjMTIzRjU0O1xyXG4kcHJpbWFyeS1jb2xvci05MDogIzA5MjAyQTtcclxuXHJcbi8vIFwib3JhbmdlIHllbGxvdyBzdW5zaGluZVwiXHJcbiRzZWNvbmRhcnktY29sb3ItMDU6ICNGQ0Y1RTM7IC8vIE1BSU5cclxuJHNlY29uZGFyeS1jb2xvci0xMDogI0ZBRUZEMTtcclxuJHNlY29uZGFyeS1jb2xvci0yMDogI0Y1REVBMztcclxuLy8gJHNlY29uZGFyeS1jb2xvci0zMDogI0ZGRkZGRjsgLy8gUkVKRUNURURcclxuLy8gJHNlY29uZGFyeS1jb2xvci00MDogI0ZGRkZGRjsgLy8gUkVKRUNURURcclxuLy8gJHNlY29uZGFyeS1jb2xvci01MDogI0ZGRkZGRjsgLy8gUkVKRUNURURcclxuLy8gJHNlY29uZGFyeS1jb2xvci02MDogI0ZGRkZGRjsgLy8gUkVKRUNURURcclxuLy8gJHNlY29uZGFyeS1jb2xvci03MDogI0ZGRkZGRjsgLy8gUkVKRUNURURcclxuLy8gJHNlY29uZGFyeS1jb2xvci04MDogI0ZGRkZGRjsgLy8gUkVKRUNURURcclxuLy8gJHNlY29uZGFyeS1jb2xvci05MDogI0ZGRkZGRjsgLy8gUkVKRUNURURcclxuXHJcbi8vIFRleHQgQ29sb3JcclxuJHRleHQtY29sb3ItMDU6ICNGMkYyRjI7XHJcbiR0ZXh0LWNvbG9yLTEwOiAjRTVFNUU1O1xyXG4kdGV4dC1jb2xvci0yMDogI0NDQ0NDQzsgLy8gVVNFRFxyXG4kdGV4dC1jb2xvci0zMDogI0IyQjJCMjtcclxuJHRleHQtY29sb3ItNDA6ICM5OTk5OTk7XHJcbiR0ZXh0LWNvbG9yLTUwOiAjN0Y3RjdGO1xyXG4kdGV4dC1jb2xvci02MDogIzY2NjY2NjtcclxuJHRleHQtY29sb3ItNzA6ICM0QzRDNEM7XHJcbiR0ZXh0LWNvbG9yLTgwOiAjMzMzMzMzO1xyXG4kdGV4dC1jb2xvci05MDogIzE5MTkxOTtcclxuXHJcbi8vIFwiV2FybmluZ1wiIENvbG9yXHJcbiR3YXJuaW5nLWNvbG9yLTA1OiAjRkNFQkU5O1xyXG4kd2FybmluZy1jb2xvci0xMDogI0Y5RDdEMjtcclxuJHdhcm5pbmctY29sb3ItMjA6ICNGMkIwQTY7XHJcbiR3YXJuaW5nLWNvbG9yLTMwOiAjRUM4ODc5O1xyXG4kd2FybmluZy1jb2xvci00MDogI0U2NjQ1MTsgLy8gTUFJTlxyXG4kd2FybmluZy1jb2xvci01MDogI0RGMzgyMDtcclxuJHdhcm5pbmctY29sb3ItNjA6ICNCMjJEMTk7XHJcbiR3YXJuaW5nLWNvbG9yLTcwOiAjODYyMjEzO1xyXG4kd2FybmluZy1jb2xvci04MDogIzU5MTcwQztcclxuJHdhcm5pbmctY29sb3ItOTA6ICMyRDBCMDY7XHJcblxyXG4vLyBcIlN0aWNreVwiIENvbG9yXHJcbiRzdGlja3ktY29sb3ItMTogI0YyODc4QTtcclxuJHN0aWNreS1jb2xvci0yOiAjRkZDQzVDO1xyXG4kc3RpY2t5LWNvbG9yLTM6ICM0NThGQzA7XHJcbiRzdGlja3ktY29sb3ItNDogIzg4RDhCMDsiLCJAdXNlICcuLi9iYXNlL3NwYWNlJyBhcyBzcGFjZTtcclxuQHVzZSAnLi4vYmFzZS9jb2xvcicgYXMgKjtcclxuXHJcblxyXG4uYWRkLXRhc2tfX3dyYXBwZXIge1xyXG4gICAgcGFkZGluZy10b3A6IHNwYWNlLiRkZXNrdG9wLXNwYWNlLWx2LTI7XHJcbn1cclxuXHJcbi5hZGQtdGFza19faW5wdXQge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkdGV4dC1jb2xvci00MDtcclxuICAgIHBhZGRpbmc6IDExcHggc3BhY2UuJGRlc2t0b3Atc3BhY2UtbHYtaGFsZjsgLy8gISBkdWUgdG8gY2hhbmdlOiAxMXB4XHJcbn1cclxuXHJcbi5hZGQtdGFza19faW5wdXQ6Zm9jdXMge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAkcHJpbWFyeS1jb2xvci01MDtcclxufVxyXG5cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICAuYWRkLXRhc2tfX3dyYXBwZXIge1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiBzcGFjZS4kbW9iaWxlLXNwYWNlLWx2LTI7XHJcbiAgICB9XHJcblxyXG4gICAgLmFkZC10YXNrX19pbnB1dCB7XHJcbiAgICAgICAgcGFkZGluZzogMTFweCBzcGFjZS4kbW9iaWxlLXNwYWNlLWx2LWhhbGY7XHJcbiAgICB9XHJcbn0iLCIvKiBCQVNFICovXHJcbkB1c2UgJ2Jhc2UvcmVzZXQnO1xyXG5AdXNlICdiYXNlL3R5cG9ncmFwaHknO1xyXG5AdXNlICdiYXNlL3NwYWNlJztcclxuQHVzZSAnYmFzZS9jb2xvcic7XHJcblxyXG4vKiBMQVlPVVRTICovXHJcbkB1c2UgJ2xheW91dHMvbmF2YmFyJztcclxuQHVzZSAnbGF5b3V0cy9tYWluJztcclxuXHJcbi8qIENPTVBPTkVOVFMgKi9cclxuXHJcbkB1c2UgJ2NvbXBvbmVudHMvYnV0dG9ucyc7XHJcbkB1c2UgJ2NvbXBvbmVudHMvaW5wdXRzJztcclxuXHJcbi8vIFN1Z2dlc3Rpb25zLi4uXHJcbi8qIEFOSU1BVElPTlMgKi9cclxuIl19 */
