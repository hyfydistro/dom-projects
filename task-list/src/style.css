@charset "UTF-8";
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  overflow-x: hidden;
}

a {
  text-decoration: none;
}

@font-face {
  font-family: "Quicksand";
  src: url("./fonts/quicksand/Quicksand-Regular.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "Quicksand";
  src: url("./fonts/quicksand/Quicksand-Bold.ttf") format("truetype");
  font-weight: bold;
  font-style: normal;
}
@font-face {
  font-family: "Myanmar Text";
  src: url("./myanmar-text/mmrtext.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "Myanmar Text";
  src: url("./myanmar-text/mmrtextb.ttf") format("truetype");
  font-weight: bold;
  font-style: normal;
}
html {
  font-size: 20px;
}
html h1 {
  font-family: "Quicksand";
  font-weight: normal;
  line-height: calc(1rem * 1.2 * 1.2 * 1.2 * 1.1);
}
html h2 {
  font-family: "Quicksand";
  font-weight: normal;
  line-height: calc(1rem * 1.2 * 1.2 * 1.1);
}
html h3 {
  font-family: "Quicksand";
  font-weight: bold;
}
html p,
html form,
html button,
html input,
html label,
html a,
html .input-field {
  font-family: "Myanmar Text";
  font-weight: normal;
  font-size: 20px;
  line-height: 1.5;
}
html header h1 {
  font-size: calc(1rem * 1.2 * 1.2 * 1.2);
}
html header h2 {
  font-size: calc(1rem * 1.2 * 1.2);
}
html header h3 {
  font-size: calc(1rem * 1.2);
}
html main h1 {
  font-size: calc(1rem * 1.2 * 1.2 * 1.2);
}
html main h2 {
  font-size: calc(1rem * 1.2 * 1.2);
}
html main h3 {
  font-size: calc(1rem * 1.2);
}
html footer p {
  font-size: 10px;
}

.text-bold {
  font-weight: bold;
}

@media screen and (max-width: 640px) {
  html {
    font-size: 15px;
  }
  html p,
html form,
html button,
html input,
html label,
html a,
html .input-field {
    font-size: 15px;
  }
  html header h1 {
    font-size: calc(1rem * 1.2 * 1.2 * 1.2);
    font-weight: bold;
    text-transform: none;
    line-height: calc(1rem * 1.2 * 1.2 * 1.2 * 1.1);
  }
  html header h2 {
    font-size: calc(1rem * 1.2 * 1.2);
    line-height: calc(1rem * 1.2 * 1.2 * 1.1);
  }
  html header h3 {
    font-size: calc(1rem * 1.2);
  }
  html main h1 {
    font-size: calc(1rem * 1.2 * 1.2 * 1.2);
  }
  html main h2 {
    font-size: calc(1rem * 1.2 * 1.2);
  }
  html main h3 {
    font-size: calc(1rem * 1.2);
  }
  html footer p {
    font-size: 15px;
  }
}
main {
  position: relative;
  display: flex;
  justify-content: center;
  flex-direction: column;
  max-width: 960px;
  padding-left: 32px;
  padding-right: 32px;
}
main .clear-btn__container {
  display: flex;
  justify-content: flex-end;
  width: 100%;
  margin-top: calc(20px * 1.5 * 1.5);
  margin-bottom: calc(20px * 1.5);
}
main h1 {
  text-align: center;
  padding-top: calc(20px * 1.5 * 1.5);
  padding-bottom: calc(20px * 1.5 * 1.5);
}
main form {
  margin: 0 auto;
  padding-top: calc(20px * 1.5);
}
main .input-field {
  padding-bottom: calc(20px * 1.5);
}
main input.add-btn {
  margin-bottom: calc(20px * 1.5);
}
main ul li {
  margin-bottom: calc(20px / 1.5);
}

@media screen and (max-width: 640px) {
  main {
    padding-left: 16px;
    padding-right: 16px;
  }
  main .clear-btn__container {
    margin-top: calc(15px * 1.5 * 1.5);
    margin-bottom: calc(15px * 1.5);
  }
  main h1 {
    padding-top: calc(15px * 1.5 * 1.5);
    padding-bottom: calc(15px * 1.5 * 1.5);
  }
  main .input-field {
    padding-top: calc(15px * 1.5);
    padding-bottom: calc(15px * 1.5);
  }
  main input.add-btn {
    margin-bottom: calc(15px * 1.5);
  }
  main ul li {
    margin-bottom: calc(15px / 1.5);
  }
}
.clear-tasks {
  position: relative;
  padding: 20px 40px;
  border: 1px solid #CF0909;
  border-radius: 9999px;
  color: #CF0909;
  padding-bottom: 10px;
}

.add-btn {
  position: relative;
  padding-left: 40px;
  padding-right: 40px;
  padding-top: 20px;
  padding-bottom: 10px;
  border: 0;
  border-radius: 9999px;
  background-color: #236B79;
  color: #FFFFFF;
  cursor: pointer;
  outline: none;
}

.add-btn:hover,
.add-btn:focus {
  background: #2F8FA2;
}

.add-btn:active {
  top: 2px;
  right: 2px;
}

.clear-tasks:hover,
.clear-tasks:focus {
  color: #FFFFFF;
  background: #CF0909;
}

.clear-tasks:active {
  top: 2px;
  right: 2px;
}

@media screen and (max-width: 640px) {
  .clear-tasks {
    padding: 15px 30px;
    border: 1px solid #CF0909;
    border-radius: 9999px;
    color: #CF0909;
    padding-bottom: 7.5px;
  }

  .add-btn {
    padding-left: 30px;
    padding-right: 30px;
    padding-top: 15px;
    padding-bottom: 7.5px;
  }
}
ul {
  position: relative;
  display: flex;
  flex-direction: column;
}

ul li {
  list-style: none;
  position: relative;
  width: 100%;
  display: flex;
  align-items: center;
  height: 45px;
  vertical-align: middle;
}

span.checkbox-container {
  width: 24px;
  height: 24px;
  border: 1px solid #000000;
  border-radius: 25%;
  margin-right: calc(20px / 1.5);
  margin-left: calc(20px / 1.5);
}

span.checkbox-container.checked::before {
  content: "";
  position: absolute;
  transform-origin: left top;
  width: 7px;
  height: 25px;
  border-bottom: 2px solid #2F8FA2;
  border-right: 2px solid #2F8FA2;
  transform: rotate(45deg);
  bottom: 16px;
  left: 13px;
  z-index: 2;
}

span.checkbox-container.checked::after {
  content: "";
  position: absolute;
  transform-origin: left top;
  width: 7px;
  height: 25px;
  border-bottom: 5px solid #FFFFFF;
  border-right: 5px solid #FFFFFF;
  transform: rotate(45deg);
  bottom: 15px;
  left: 12px;
  z-index: 1;
}

ul label {
  position: relative;
  width: 100%;
  cursor: pointer;
  display: flex;
  top: 7px;
}

input[type=checkbox] {
  cursor: pointer;
  opacity: 0;
  position: absolute;
  left: 4px;
  z-index: -1;
}

.collection input[type=checkbox]:checked + label {
  text-decoration: line-through;
  color: #666666;
}

span.checkbox-container.checked::before {
  animation: checkboxleft 0.2s ease 0s forwards;
}

span.checkbox-container.checked::after {
  animation: checkboxright 0.2s ease 0s forwards;
}

@keyframes checkboxleft {
  0% {
    width: 0;
    height: 0;
    transform-origin: left top;
  }
  100% {
    width: 7px;
    height: 25px;
    transform-origin: center center;
  }
}
@keyframes checkboxright {
  0% {
    width: 0;
    height: 0;
    transform-origin: left top;
  }
  100% {
    width: 7px;
    height: 25px;
    transform-origin: center center;
  }
}
span.closebox-container {
  width: 24px;
  height: 24px;
  border: 1px solid #CF0909;
  margin-right: calc(20px / 1.5);
  border-radius: 25%;
}
span.closebox-container:hover {
  border: none;
  background-color: #CF0909;
}
span.closebox-container:hover::before {
  color: #FFFFFF;
}

span.closebox-container::before {
  content: "";
  font-family: "FontAwesome";
  position: absolute;
  top: 15px;
  color: #CF0909;
}

@media screen and (max-width: 640px) {
  span.checkbox-container {
    margin-right: calc(15px / 1.5);
    margin-left: calc(15px / 1.5);
  }

  span.checkbox-container.checked::before {
    left: 22px;
  }

  span.checkbox-container.checked::after {
    left: 21px;
  }

  span.closebox-container {
    margin-right: calc(15px / 1.5);
  }

  span.closebox-container::before {
    right: 14px;
  }
}
input#task,
input#filter {
  border: none;
  outline: none;
  -webkit-appearance: none;
          appearance: none;
  padding-top: calc(20px * 1.5);
  padding-left: calc(20px / 1.5);
  height: 60px;
  width: 100%;
  font-size: 1rem;
  max-width: 640px;
  background: linear-gradient(90deg, #2F8FA2, #2F8FA2) center bottom/0 2px no-repeat, linear-gradient(90deg, #ccc, #ccc) left bottom/100% 2px no-repeat, linear-gradient(90deg, #fff, #fff) left bottom/100% no-repeat;
  transition: background-size 0.3s ease;
}

#task,
#filter {
  border-radius: 3px;
}

.input-field {
  position: relative;
  font-size: 1rem;
}

label[for=filter],
label[for=task] {
  position: absolute;
  left: calc(20px / 1.5);
  top: 34%;
  color: #666666;
  transition: top 0.3s ease, font-size 0.3s ease, color 0.3s ease;
}

input#task:valid + label,
input#task:focus + label,
input#filter:focus + label,
input#filter:valid + label {
  top: calc(20px / 1.5);
  font-size: 12px;
  color: #236B79;
}

#task:valid,
#task:focus,
#filter:valid,
#filter:focus {
  background-size: 100% 2px, 100% 2px, 100%;
}

label[for=filter] {
  width: 100%;
  display: flex;
  justify-content: space-between;
}

label[for=filter]::after {
  content: "";
  font-family: "FontAwesome";
  position: absolute;
  right: calc(15px * 1.5);
  bottom: 4px;
  color: #EFAA2B;
  font-size: 1rem;
}

input#filter:focus + label[for=filter]::after,
input#filter:valid + label[for=filter]::after {
  top: 0;
  display: none;
}

@media screen and (max-width: 640px) {
  input#task,
input#filter {
    padding-top: calc(15px * 1.5);
    padding-left: calc(15px / 1.5);
    height: 45px;
  }

  label[for=filter],
label[for=task] {
    left: calc(15px / 1.5);
    top: 50%;
  }

  input#task:valid + label,
input#task:focus + label,
input#filter:focus + label,
input#filter:valid + label {
    top: calc(15px * 1.5);
    font-size: 10px;
  }
}
/* BASE */
/* LAYOUTS */
/* COMPONENTS */
/* ANIMATIONS */
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
